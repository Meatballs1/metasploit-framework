# -*- coding: binary -*-

###
#
# Common SAP features
#
###

require 'rubygems'
begin
  require 'nwrfc'
rescue LoadError
  abort("[x] This module requires the NW RFC SDK ruby wrapper (http://rubygems.org/gems/nwrfc) from Martin Ceronio.")
end


module Msf
module Exploit::SAP

  include NWRFC

  def initialize(info = {})
    super
    register_options(
      [
        OptString.new('CLIENT', [true, 'Client can be single (066), comma seperated list (000,001,066) or range (000-999)', '000,001,066']),
        OptString.new('SRHOST', [false, 'SAP Router Address', nil]),
        OptString.new('SRPORT', [false, 'SAP Router Port Number', nil]),
    ], self.class)

  end

  def system_number
    datastore['RPORT'].to_s[-2..-1]
  end

  def client_list
    if datastore['CLIENT'].nil?
      print_status("Using default SAP client list")
      clients = ['000', '001', '066']
    else
      if datastore['CLIENT'] =~ /^\d{3},/
        clients = datastore['CLIENT'].split(/,/)
        print_status("Brute forcing clients #{datastore['CLIENT']}")
      elsif
        datastore['CLIENT'] =~ /^\d{3}-\d{3}\z/
        array = datastore['CLIENT'].split(/-/)
        clients = (array.at(0)..array.at(1)).to_a
        print_status("Brute forcing clients #{datastore['CLIENT']}")
      elsif
        datastore['CLIENT'] =~ /^\d{3}\z/
        clients = datastore['CLIENT']
        print_status("Brute forcing client #{datastore['CLIENT']}")
      else
        print_status("Invalid CLIENT - using default SAP client list instead")
        clients = ['000', '001', '066']
      end
    end

    clients
  end
end
end

